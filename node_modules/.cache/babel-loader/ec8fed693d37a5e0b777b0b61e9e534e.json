{"ast":null,"code":"/*global chrome*/\nimport React from \"react\";\n\nclass Test extends React.Component {\n  constructor(props) {\n    super(props);\n    const arr = [];\n\n    for (let i = 0; i < 100; i++) {\n      arr.push(i);\n    }\n\n    this.state = {\n      arr,\n      position: 0\n    };\n  }\n\n  componentDidMount() {\n    this.timer = setInterval(this.tick(), 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timer);\n  }\n\n  tick() {\n    this.setState({\n      position: this.state.position + 1\n    });\n  }\n\n  render() {\n    return;\n  }\n\n}\n\nexport default Test;","map":{"version":3,"sources":["/Users/Overseer/Desktop/spreeder/options/src/components/Test/Test.js"],"names":["React","Test","Component","constructor","props","arr","i","push","state","position","componentDidMount","timer","setInterval","tick","componentWillUnmount","clearInterval","setState","render"],"mappings":"AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,IAAN,SAAmBD,KAAK,CAACE,SAAzB,CAAmC;AACjCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,UAAMC,GAAG,GAAG,EAAZ;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,GAApB,EAAyBA,CAAC,EAA1B,EAA8B;AAC5BD,MAAAA,GAAG,CAACE,IAAJ,CAASD,CAAT;AACD;;AACD,SAAKE,KAAL,GAAa;AACXH,MAAAA,GADW;AAEXI,MAAAA,QAAQ,EAAE;AAFC,KAAb;AAID;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,KAAL,GAAaC,WAAW,CAAC,KAAKC,IAAL,EAAD,EAAc,IAAd,CAAxB;AACD;;AAEDC,EAAAA,oBAAoB,GAAG;AACrBC,IAAAA,aAAa,CAAC,KAAKJ,KAAN,CAAb;AACD;;AAEDE,EAAAA,IAAI,GAAG;AACL,SAAKG,QAAL,CAAc;AACZP,MAAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWC,QAAX,GAAsB;AADpB,KAAd;AAGD;;AAEDQ,EAAAA,MAAM,GAAG;AACP;AACD;;AA9BgC;;AAiCnC,eAAehB,IAAf","sourcesContent":["/*global chrome*/\nimport React from \"react\";\n\nclass Test extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const arr = [];\n    for (let i = 0; i < 100; i++) {\n      arr.push(i);\n    }\n    this.state = {\n      arr,\n      position: 0\n    };\n  }\n\n  componentDidMount() {\n    this.timer = setInterval(this.tick(), 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timer);\n  }\n\n  tick() {\n    this.setState({\n      position: this.state.position + 1\n    });\n  }\n\n  render() {\n    return;\n  }\n}\n\nexport default Test;\n"]},"metadata":{},"sourceType":"module"}