{"ast":null,"code":"var _jsxFileName = \"/Users/Overseer/Desktop/spreeder/options/src/components/Body/Spreeder/PlayPause/PlayPause.tsx\";\nimport React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { connect } from \"react-redux\";\nimport { setPosition } from \"../../../../actions\";\n\nclass PlayPause extends React.Component {\n  constructor(props) {\n    super(props);\n    this.timer = void 0;\n    this.state = {\n      isSpreeding: false\n    };\n    this.startTimer = this.startTimer.bind(this);\n    this.stopTimer = this.stopTimer.bind(this);\n  }\n\n  startTimer() {\n    this.timer = setInterval(() => this.tick(), 1000);\n    this.setState({\n      isSpreeding: true\n    });\n  }\n\n  stopTimer() {\n    clearInterval(this.timer);\n    this.setState({\n      isSpreeding: false\n    });\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timer);\n    this.setState({\n      isSpreeding: false\n    });\n  }\n\n  tick() {\n    const _this$props = this.props,\n          textArray = _this$props.textArray,\n          position = _this$props.position,\n          increment = _this$props.increment,\n          reset = _this$props.reset;\n\n    if (position < textArray.length) {\n      increment();\n    } else {\n      this.stopTimer();\n      reset();\n    }\n  }\n\n  render() {\n    const textArray = this.props.textArray;\n    const isSpreeding = this.state.isSpreeding;\n    return React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \" \", isSpreeding ? React.createElement(\"a\", {\n      \"data-tip\": \"Pause\",\n      onClick: this.stopTimer,\n      style: {\n        cursor: \"pointer\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \" \", React.createElement(FontAwesomeIcon, {\n      icon: \"pause\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }), \" \") : React.createElement(\"a\", {\n      \"data-tip\": textArray.length ? \"Spreed!\" : \"Add text to start\",\n      onClick: () => {\n        if (textArray.length) {\n          this.startTimer();\n        }\n      },\n      style: {\n        cursor: textArray.length ? \"pointer\" : \"not-allowed\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \" \", React.createElement(FontAwesomeIcon, {\n      icon: \"play\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }), \" \"));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    textArray: state.text ? state.text.trim().replace(/\\s\\s+/g, \" \").split(/\\s/) : [],\n    position: state.position\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    increment: () => dispatch(setPosition(\"INCREMENT\")),\n    reset: () => dispatch(setPosition(\"RESET\"))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PlayPause);","map":{"version":3,"sources":["/Users/Overseer/Desktop/spreeder/options/src/components/Body/Spreeder/PlayPause/PlayPause.tsx"],"names":["React","FontAwesomeIcon","connect","setPosition","PlayPause","Component","constructor","props","timer","state","isSpreeding","startTimer","bind","stopTimer","setInterval","tick","setState","clearInterval","componentWillUnmount","textArray","position","increment","reset","length","render","cursor","mapStateToProps","text","trim","replace","split","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,QAA4B,qBAA5B;;AAaA,MAAMC,SAAN,SAAwBJ,KAAK,CAACK,SAA9B,CAAwE;AAEtEC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AADiB,SADnBC,KACmB;AAEjB,SAAKC,KAAL,GAAa;AACXC,MAAAA,WAAW,EAAE;AADF,KAAb;AAGA,SAAKC,UAAL,GAAkB,KAAKA,UAAL,CAAgBC,IAAhB,CAAqB,IAArB,CAAlB;AACA,SAAKC,SAAL,GAAiB,KAAKA,SAAL,CAAeD,IAAf,CAAoB,IAApB,CAAjB;AACD;;AAEDD,EAAAA,UAAU,GAAG;AACX,SAAKH,KAAL,GAAaM,WAAW,CAAC,MAAM,KAAKC,IAAL,EAAP,EAAoB,IAApB,CAAxB;AACA,SAAKC,QAAL,CAAc;AACZN,MAAAA,WAAW,EAAE;AADD,KAAd;AAGD;;AAEDG,EAAAA,SAAS,GAAG;AACVI,IAAAA,aAAa,CAAC,KAAKT,KAAN,CAAb;AACA,SAAKQ,QAAL,CAAc;AACZN,MAAAA,WAAW,EAAE;AADD,KAAd;AAGD;;AAEDQ,EAAAA,oBAAoB,GAAG;AACrBD,IAAAA,aAAa,CAAC,KAAKT,KAAN,CAAb;AACA,SAAKQ,QAAL,CAAc;AACZN,MAAAA,WAAW,EAAE;AADD,KAAd;AAGD;;AAEDK,EAAAA,IAAI,GAAG;AAAA,wBAC6C,KAAKR,KADlD;AAAA,UACGY,SADH,eACGA,SADH;AAAA,UACcC,QADd,eACcA,QADd;AAAA,UACwBC,SADxB,eACwBA,SADxB;AAAA,UACmCC,KADnC,eACmCA,KADnC;;AAEL,QAAIF,QAAQ,GAAGD,SAAS,CAACI,MAAzB,EAAiC;AAC/BF,MAAAA,SAAS;AACV,KAFD,MAEO;AACL,WAAKR,SAAL;AACAS,MAAAA,KAAK;AACN;AACF;;AAEDE,EAAAA,MAAM,GAAG;AAAA,UACCL,SADD,GACe,KAAKZ,KADpB,CACCY,SADD;AAAA,UAECT,WAFD,GAEiB,KAAKD,KAFtB,CAECC,WAFD;AAGP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,GADH,EAEGA,WAAW,GACV;AACE,kBAAS,OADX;AAEE,MAAA,OAAO,EAAE,KAAKG,SAFhB;AAGE,MAAA,KAAK,EAAE;AACLY,QAAAA,MAAM,EAAE;AADH,OAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOG,GAPH,EAQE,oBAAC,eAAD;AAAiB,MAAA,IAAI,EAAC,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,EAQmC,GARnC,CADU,GAYV;AACE,kBAAUN,SAAS,CAACI,MAAV,GAAmB,SAAnB,GAA+B,mBAD3C;AAEE,MAAA,OAAO,EAAE,MAAM;AACb,YAAIJ,SAAS,CAACI,MAAd,EAAsB;AACpB,eAAKZ,UAAL;AACD;AACF,OANH;AAOE,MAAA,KAAK,EAAE;AACLc,QAAAA,MAAM,EAAEN,SAAS,CAACI,MAAV,GAAmB,SAAnB,GAA+B;AADlC,OAPT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAWG,GAXH,EAYE,oBAAC,eAAD;AAAiB,MAAA,IAAI,EAAC,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZF,EAYkC,GAZlC,CAdJ,CADF;AAgCD;;AA7EqE;;AAgFxE,MAAMG,eAAe,GAAGjB,KAAK,IAAI;AAC/B,SAAO;AACLU,IAAAA,SAAS,EAAEV,KAAK,CAACkB,IAAN,GACPlB,KAAK,CAACkB,IAAN,CACGC,IADH,GAEGC,OAFH,CAEW,QAFX,EAEqB,GAFrB,EAGGC,KAHH,CAGS,IAHT,CADO,GAKP,EANC;AAOLV,IAAAA,QAAQ,EAAEX,KAAK,CAACW;AAPX,GAAP;AASD,CAVD;;AAYA,MAAMW,kBAAkB,GAAGC,QAAQ,IAAI;AACrC,SAAO;AACLX,IAAAA,SAAS,EAAE,MAAMW,QAAQ,CAAC7B,WAAW,CAAC,WAAD,CAAZ,CADpB;AAELmB,IAAAA,KAAK,EAAE,MAAMU,QAAQ,CAAC7B,WAAW,CAAC,OAAD,CAAZ;AAFhB,GAAP;AAID,CALD;;AAOA,eAAeD,OAAO,CACpBwB,eADoB,EAEpBK,kBAFoB,CAAP,CAGb3B,SAHa,CAAf","sourcesContent":["import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { connect } from \"react-redux\";\nimport { setPosition } from \"../../../../actions\";\nimport ReactTooltip from \"react-tooltip\";\n\ninterface PlayPauseProps {\n  textArray: string[];\n  position: number;\n  increment(): any;\n  reset(): any;\n}\ninterface PlayPauseState {\n  isSpreeding: boolean;\n}\n\nclass PlayPause extends React.Component<PlayPauseProps, PlayPauseState> {\n  timer: any;\n  constructor(props) {\n    super(props);\n    this.state = {\n      isSpreeding: false\n    };\n    this.startTimer = this.startTimer.bind(this);\n    this.stopTimer = this.stopTimer.bind(this);\n  }\n\n  startTimer() {\n    this.timer = setInterval(() => this.tick(), 1000);\n    this.setState({\n      isSpreeding: true\n    });\n  }\n\n  stopTimer() {\n    clearInterval(this.timer);\n    this.setState({\n      isSpreeding: false\n    });\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timer);\n    this.setState({\n      isSpreeding: false\n    });\n  }\n\n  tick() {\n    const { textArray, position, increment, reset } = this.props;\n    if (position < textArray.length) {\n      increment();\n    } else {\n      this.stopTimer();\n      reset();\n    }\n  }\n\n  render() {\n    const { textArray } = this.props;\n    const { isSpreeding } = this.state;\n    return (\n      <li>\n        {\" \"}\n        {isSpreeding ? (\n          <a\n            data-tip=\"Pause\"\n            onClick={this.stopTimer}\n            style={{\n              cursor: \"pointer\"\n            }}\n          >\n            {\" \"}\n            <FontAwesomeIcon icon=\"pause\" />{\" \"}\n          </a>\n        ) : (\n          <a\n            data-tip={textArray.length ? \"Spreed!\" : \"Add text to start\"}\n            onClick={() => {\n              if (textArray.length) {\n                this.startTimer();\n              }\n            }}\n            style={{\n              cursor: textArray.length ? \"pointer\" : \"not-allowed\"\n            }}\n          >\n            {\" \"}\n            <FontAwesomeIcon icon=\"play\" />{\" \"}\n          </a>\n        )}\n      </li>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    textArray: state.text\n      ? state.text\n          .trim()\n          .replace(/\\s\\s+/g, \" \")\n          .split(/\\s/)\n      : [],\n    position: state.position\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    increment: () => dispatch(setPosition(\"INCREMENT\")),\n    reset: () => dispatch(setPosition(\"RESET\"))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(PlayPause);\n"]},"metadata":{},"sourceType":"module"}