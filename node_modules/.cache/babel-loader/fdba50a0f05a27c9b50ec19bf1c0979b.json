{"ast":null,"code":"var _jsxFileName = \"/Users/Overseer/Desktop/spreeder/options/src/components/Body/Spreeder/Spreeder.tsx\";\n\n/*global chrome*/\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport PlayPause from \"./PlayPause\";\nimport ChangeSpeed from \"./ChangeSpeed\";\nimport FontSize from \"./FontSize\";\nimport { partition, stringToWordArray } from \"../../../utils\";\nimport NumLines from \"./NumLines\";\nimport NumWords from \"./NumWords\";\nimport { setPosition } from \"../../../actions\";\n\nclass Spreeder extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleWheel = this.handleWheel.bind(this);\n  }\n\n  handleWheel(event) {\n    const delta = Math.sign(event.deltaY); // positive => down\n\n    const _this$props = this.props,\n          textArray = _this$props.textArray,\n          position = _this$props.position,\n          increment = _this$props.increment,\n          decrement = _this$props.decrement;\n\n    if (delta > 0 && position < textArray.length - 1) {\n      //down\n      increment();\n    } else if (delta < 0 && position > 0) {\n      //up\n      decrement();\n    }\n  }\n\n  handleKey(event) {\n    const _this$props2 = this.props,\n          textArray = _this$props2.textArray,\n          position = _this$props2.position,\n          increment = _this$props2.increment,\n          decrement = _this$props2.decrement;\n\n    if (event.code === \"ArrowDown\" && position < textArray.length - 1) {\n      //down\n      increment();\n    } else if (event.code === \"ArrowUp\" && position > 0) {\n      //up\n      decrement();\n    }\n  }\n\n  componentDidMount() {\n    window.addEventListener(\"wheel\", this.handleWheel);\n    document.addEventListener(\"keydown\");\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"wheel\", this.handleWheel);\n  }\n\n  render() {\n    const _this$props3 = this.props,\n          textArray = _this$props3.textArray,\n          position = _this$props3.position,\n          lines = _this$props3.lines,\n          fontSize = _this$props3.fontSize;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"has-text-centered\",\n      style: {\n        position: \"absolute\",\n        top: String(44 - 2.5 * lines) + \"vh\",\n        width: \"-webkit-fill-available\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, textArray.length ? textArray[position].map(line => {\n      return React.createElement(\"div\", {\n        className: \"title has-text-white\",\n        style: {\n          marginBottom: 0,\n          fontSize\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, line.join(\" \"));\n    }) : React.createElement(\"div\", {\n      className: \"title has-text-white\",\n      style: {\n        fontSize\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"Add text to begin spreeding\")), React.createElement(\"div\", {\n      className: \"hero-foot\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"nav\", {\n      className: \"tabs is-boxed is-fullwidth\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(ChangeSpeed, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }), React.createElement(NumLines, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }), React.createElement(PlayPause, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }), React.createElement(NumWords, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }), React.createElement(FontSize, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    textArray: state.text ? partition(state.lines * state.words, stringToWordArray(state.text)).map(block => {\n      return partition(state.words, block);\n    }) : [],\n    position: state.position,\n    lines: state.lines,\n    fontSize: String(state.size) + \"pt\"\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    increment: () => dispatch(setPosition(\"INCREMENT\")),\n    decrement: () => dispatch(setPosition(\"DECREMENT\"))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Spreeder);","map":{"version":3,"sources":["/Users/Overseer/Desktop/spreeder/options/src/components/Body/Spreeder/Spreeder.tsx"],"names":["React","connect","PlayPause","ChangeSpeed","FontSize","partition","stringToWordArray","NumLines","NumWords","setPosition","Spreeder","Component","constructor","props","handleWheel","bind","event","delta","Math","sign","deltaY","textArray","position","increment","decrement","length","handleKey","code","componentDidMount","window","addEventListener","document","componentWillUnmount","removeEventListener","render","lines","fontSize","top","String","width","map","line","marginBottom","join","mapStateToProps","state","text","words","block","size","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["/*global chrome*/\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport PlayPause from \"./PlayPause\";\nimport ChangeSpeed from \"./ChangeSpeed\";\nimport FontSize from \"./FontSize\";\nimport { partition, stringToWordArray } from \"../../../utils\";\nimport NumLines from \"./NumLines\";\nimport NumWords from \"./NumWords\";\nimport { setPosition } from \"../../../actions\";\n\ninterface SpreederProps {\n  textArray: string[][][] | [];\n  position: number;\n  lines: number;\n  fontSize: string;\n  increment(): any;\n  decrement(): any;\n}\n\nclass Spreeder extends React.Component<SpreederProps> {\n  constructor(props) {\n    super(props);\n    this.handleWheel = this.handleWheel.bind(this);\n  }\n\n  handleWheel(event) {\n    const delta = Math.sign(event.deltaY);\n    // positive => down\n    const { textArray, position, increment, decrement } = this.props;\n    if (delta > 0 && position < textArray.length - 1) {\n      //down\n      increment();\n    } else if (delta < 0 && position > 0) {\n      //up\n      decrement();\n    }\n  }\n\n  handleKey(event) {\n    const { textArray, position, increment, decrement } = this.props;\n    if (event.code === \"ArrowDown\" && position < textArray.length - 1) {\n      //down\n      increment();\n    } else if (event.code === \"ArrowUp\" && position > 0) {\n      //up\n      decrement();\n    }\n  }\n\n  componentDidMount() {\n    window.addEventListener(\"wheel\", this.handleWheel);\n    document.addEventListener(\"keydown\");\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"wheel\", this.handleWheel);\n  }\n\n  render() {\n    const { textArray, position, lines, fontSize } = this.props;\n    return (\n      <div>\n        <div\n          className=\"has-text-centered\"\n          style={{\n            position: \"absolute\",\n            top: String(44 - 2.5 * lines) + \"vh\",\n            width: \"-webkit-fill-available\"\n          }}\n        >\n          {textArray.length ? (\n            textArray[position].map(line => {\n              return (\n                <div\n                  className=\"title has-text-white\"\n                  style={{\n                    marginBottom: 0,\n                    fontSize\n                  }}\n                >\n                  {line.join(\" \")}\n                </div>\n              );\n            })\n          ) : (\n            <div\n              className=\"title has-text-white\"\n              style={{\n                fontSize\n              }}\n            >\n              Add text to begin spreeding\n            </div>\n          )}\n        </div>\n        <div className=\"hero-foot\">\n          <nav className=\"tabs is-boxed is-fullwidth\">\n            <ul>\n              <ChangeSpeed />\n              <NumLines />\n              <PlayPause />\n              <NumWords />\n              <FontSize />\n            </ul>\n          </nav>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    textArray: state.text\n      ? partition(state.lines * state.words, stringToWordArray(state.text)).map(\n          block => {\n            return partition(state.words, block);\n          }\n        )\n      : [],\n    position: state.position,\n    lines: state.lines,\n    fontSize: String(state.size) + \"pt\"\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    increment: () => dispatch(setPosition(\"INCREMENT\")),\n    decrement: () => dispatch(setPosition(\"DECREMENT\"))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Spreeder);\n"]},"metadata":{},"sourceType":"module"}