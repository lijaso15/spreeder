{"ast":null,"code":"var _jsxFileName = \"/Users/Overseer/Desktop/spreeder/options/src/components/Spreeder/Spreeder.tsx\";\n\n/*global chrome*/\nimport React from \"react\";\nimport Navbar from \"../Navbar\";\nimport { connect } from \"react-redux\";\n\nclass Spreeder extends React.Component {\n  constructor(props) {\n    super(props);\n    this.timer = void 0;\n    this.state = {\n      position: 0,\n      isSpreeding: false\n    };\n    this.startTimer = this.startTimer.bind(this);\n    this.stopTimer = this.stopTimer.bind(this);\n  }\n\n  startTimer() {\n    this.timer = setInterval(() => this.tick(), 1000);\n    this.setState({\n      isSpreeding: true\n    });\n  }\n\n  stopTimer() {\n    clearInterval(this.timer);\n    this.setState({\n      isSpreeding: false\n    });\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timer);\n    this.setState({\n      isSpreeding: false\n    });\n  }\n\n  tick() {\n    const textArray = this.props.textArray;\n    const position = this.state.position;\n\n    if (position < textArray.length) {\n      this.setState({\n        position: position + 1\n      });\n    } else {\n      this.stopTimer();\n      this.setState({\n        position: 0\n      });\n    }\n  }\n\n  render() {\n    const _this$props = this.props,\n          active = _this$props.active,\n          textArray = _this$props.textArray;\n    const _this$state = this.state,\n          position = _this$state.position,\n          isSpreeding = _this$state.isSpreeding;\n    return React.createElement(\"section\", {\n      className: \"hero is-fullheight\",\n      style: {\n        display: active ? \"block\" : \"none\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"hero-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container has-text-centered\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"Title\"), React.createElement(\"h2\", {\n      className: \"subtitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \"Subtitle\"))), React.createElement(\"div\", {\n      className: \"hero-foot\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(\"nav\", {\n      className: \"tabs is-boxed is-fullwidth\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      className: \"is-active\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, \"Overview\")), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, \"Modifiers\")), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, \"Grid\")), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, \"Elements\")), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, \"Components\")), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, \"Layout\")))))), \";\");\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    active: state.toggle.spreed,\n    textArray: state.text ? state.text.trim().replace(/\\s\\s+/g, \" \").split(/\\s/) : []\n  };\n};\n\nexport default connect(mapStateToProps, null)(Spreeder);","map":{"version":3,"sources":["/Users/Overseer/Desktop/spreeder/options/src/components/Spreeder/Spreeder.tsx"],"names":["React","Navbar","connect","Spreeder","Component","constructor","props","timer","state","position","isSpreeding","startTimer","bind","stopTimer","setInterval","tick","setState","clearInterval","componentWillUnmount","textArray","length","render","active","display","mapStateToProps","toggle","spreed","text","trim","replace","split"],"mappings":"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","sourcesContent":["/*global chrome*/\nimport React from \"react\";\nimport Navbar from \"../Navbar\";\nimport { connect } from \"react-redux\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\ninterface SpreederProps {\n  active: boolean;\n  textArray: string[];\n}\n\ninterface SpreederState {\n  position: number;\n  isSpreeding: boolean;\n}\n\nclass Spreeder extends React.Component<SpreederProps, SpreederState> {\n  timer: any;\n  constructor(props) {\n    super(props);\n    this.state = {\n      position: 0,\n      isSpreeding: false\n    };\n    this.startTimer = this.startTimer.bind(this);\n    this.stopTimer = this.stopTimer.bind(this);\n  }\n\n  startTimer() {\n    this.timer = setInterval(() => this.tick(), 1000);\n    this.setState({\n      isSpreeding: true\n    });\n  }\n\n  stopTimer() {\n    clearInterval(this.timer);\n    this.setState({\n      isSpreeding: false\n    });\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timer);\n    this.setState({\n      isSpreeding: false\n    });\n  }\n\n  tick() {\n    const { textArray } = this.props;\n    const { position } = this.state;\n    if (position < textArray.length) {\n      this.setState({\n        position: position + 1\n      });\n    } else {\n      this.stopTimer();\n      this.setState({\n        position: 0\n      });\n    }\n  }\n\n  render() {\n    const { active, textArray } = this.props;\n    const { position, isSpreeding } = this.state;\n    return (\n      <section\n        className=\"hero is-fullheight\"\n        style={{\n          display: active ? \"block\" : \"none\"\n        }}\n      >\n        <Navbar />\n        {/* <div\n          style={{\n            position: \"absolute\",\n            top: \"44vh\",\n            width: \"-webkit-fill-available\"\n          }}\n        >\n          <div className=\"container has-text-centered\">\n            {\" \"}\n            {textArray[position]}{\" \"}\n          </div>\n          <nav className=\"level\">\n            <div className=\"level-item has-text-centered\">\n              {isSpreeding ? (\n                <div>\n                  <span\n                    onClick={this.stopTimer}\n                    style={{\n                      cursor: \"pointer\"\n                    }}\n                  >\n                    {\" \"}\n                    <FontAwesomeIcon icon=\"pause\" />{\" \"}\n                  </span>\n                </div>\n              ) : (\n                <div>\n                  <span\n                    onClick={() => {\n                      if (textArray.length) {\n                        this.startTimer();\n                      }\n                    }}\n                    style={{\n                      cursor: textArray.length ? \"pointer\" : \"not-allowed\"\n                    }}\n                  >\n                    {\" \"}\n                    <FontAwesomeIcon icon=\"play\" />{\" \"}\n                  </span>\n                </div>\n              )}\n            </div>\n          </nav>\n        </div> */}\n        <div className=\"hero-body\">\n          <div className=\"container has-text-centered\">\n            <h1 className=\"title\">Title</h1>\n            <h2 className=\"subtitle\">Subtitle</h2>\n          </div>\n        </div>\n        <div className=\"hero-foot\">\n          <nav className=\"tabs is-boxed is-fullwidth\">\n            <div className=\"container\">\n              <ul>\n                <li className=\"is-active\">\n                  <a>Overview</a>\n                </li>\n                <li>\n                  <a>Modifiers</a>\n                </li>\n                <li>\n                  <a>Grid</a>\n                </li>\n                <li>\n                  <a>Elements</a>\n                </li>\n                <li>\n                  <a>Components</a>\n                </li>\n                <li>\n                  <a>Layout</a>\n                </li>\n              </ul>\n            </div>\n          </nav>\n        </div>\n        ;\n      </section>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    active: state.toggle.spreed,\n    textArray: state.text\n      ? state.text\n          .trim()\n          .replace(/\\s\\s+/g, \" \")\n          .split(/\\s/)\n      : []\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  null\n)(Spreeder);\n"]},"metadata":{},"sourceType":"module"}