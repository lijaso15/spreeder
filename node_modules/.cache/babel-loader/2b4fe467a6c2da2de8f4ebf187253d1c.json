{"ast":null,"code":"var _jsxFileName = \"/Users/Overseer/Desktop/spreeder/options/src/components/Spreeder/Spreeder.tsx\";\n\n/*global chrome*/\nimport React from \"react\";\nimport Navbar from \"../Navbar\";\nimport { connect } from \"react-redux\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nclass Spreeder extends React.Component {\n  constructor(props) {\n    super(props);\n    this.timer = void 0;\n    this.state = {\n      position: 0\n    };\n  } // componentDidMount() {\n  //   this.timer = setInterval(() => this.tick(), 1000);\n  // }\n\n\n  componentWillUnmount() {\n    clearInterval(this.timer);\n  }\n\n  tick() {\n    const textArray = this.props.textArray;\n    const position = this.state.position;\n    this.setState({\n      position: position < textArray.length ? position + 1 : position\n    });\n  }\n\n  render() {\n    const _this$props = this.props,\n          active = _this$props.active,\n          textArray = _this$props.textArray;\n    const position = this.state.position;\n    console.log(textArray[position]);\n    return React.createElement(\"section\", {\n      className: \"hero is-fullheight\",\n      style: {\n        display: active ? \"block\" : \"none\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), React.createElement(\"nav\", {\n      className: \"level\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"level-item has-text-centered\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \" \", textArray[position], \" \"), React.createElement(FontAwesomeIcon, {\n      icon: \"play\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    active: state.toggle.spreed,\n    textArray: state.text ? state.text.split() : []\n  };\n};\n\nexport default connect(mapStateToProps, null)(Spreeder);","map":{"version":3,"sources":["/Users/Overseer/Desktop/spreeder/options/src/components/Spreeder/Spreeder.tsx"],"names":["React","Navbar","connect","FontAwesomeIcon","Spreeder","Component","constructor","props","timer","state","position","componentWillUnmount","clearInterval","tick","textArray","setState","length","render","active","console","log","display","mapStateToProps","toggle","spreed","text","split"],"mappings":";;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,eAAT,QAAgC,gCAAhC;;AAWA,MAAMC,QAAN,SAAuBJ,KAAK,CAACK,SAA7B,CAAqE;AAEnEC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AADiB,SADnBC,KACmB;AAEjB,SAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE;AADC,KAAb;AAGD,GAPkE,CASnE;AACA;AACA;;;AAEAC,EAAAA,oBAAoB,GAAG;AACrBC,IAAAA,aAAa,CAAC,KAAKJ,KAAN,CAAb;AACD;;AAEDK,EAAAA,IAAI,GAAG;AAAA,UACGC,SADH,GACiB,KAAKP,KADtB,CACGO,SADH;AAAA,UAEGJ,QAFH,GAEgB,KAAKD,KAFrB,CAEGC,QAFH;AAGL,SAAKK,QAAL,CAAc;AACZL,MAAAA,QAAQ,EAAEA,QAAQ,GAAGI,SAAS,CAACE,MAArB,GAA8BN,QAAQ,GAAG,CAAzC,GAA6CA;AAD3C,KAAd;AAGD;;AAEDO,EAAAA,MAAM,GAAG;AAAA,wBACuB,KAAKV,KAD5B;AAAA,UACCW,MADD,eACCA,MADD;AAAA,UACSJ,SADT,eACSA,SADT;AAAA,UAECJ,QAFD,GAEc,KAAKD,KAFnB,CAECC,QAFD;AAGPS,IAAAA,OAAO,CAACC,GAAR,CAAYN,SAAS,CAACJ,QAAD,CAArB;AACA,WACE;AACE,MAAA,SAAS,EAAC,oBADZ;AAEE,MAAA,KAAK,EAAE;AACLW,QAAAA,OAAO,EAAEH,MAAM,GAAG,OAAH,GAAa;AADvB,OAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAME,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,EAOE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,8BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAA6BJ,SAAS,CAACJ,QAAD,CAAtC,MADF,EAEE,oBAAC,eAAD;AAAiB,MAAA,IAAI,EAAC,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,CADF,CAPF,CADF;AAkBD;;AA/CkE;;AAkDrE,MAAMY,eAAe,GAAGb,KAAK,IAAI;AAC/B,SAAO;AACLS,IAAAA,MAAM,EAAET,KAAK,CAACc,MAAN,CAAaC,MADhB;AAELV,IAAAA,SAAS,EAAEL,KAAK,CAACgB,IAAN,GAAahB,KAAK,CAACgB,IAAN,CAAWC,KAAX,EAAb,GAAkC;AAFxC,GAAP;AAID,CALD;;AAOA,eAAexB,OAAO,CACpBoB,eADoB,EAEpB,IAFoB,CAAP,CAGblB,QAHa,CAAf","sourcesContent":["/*global chrome*/\nimport React from \"react\";\nimport Navbar from \"../Navbar\";\nimport { connect } from \"react-redux\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\ninterface SpreederProps {\n  active: boolean;\n  textArray: string[];\n}\n\ninterface SpreederState {\n  position: number;\n}\n\nclass Spreeder extends React.Component<SpreederProps, SpreederState> {\n  timer: any;\n  constructor(props) {\n    super(props);\n    this.state = {\n      position: 0\n    };\n  }\n\n  // componentDidMount() {\n  //   this.timer = setInterval(() => this.tick(), 1000);\n  // }\n\n  componentWillUnmount() {\n    clearInterval(this.timer);\n  }\n\n  tick() {\n    const { textArray } = this.props;\n    const { position } = this.state;\n    this.setState({\n      position: position < textArray.length ? position + 1 : position\n    });\n  }\n\n  render() {\n    const { active, textArray } = this.props;\n    const { position } = this.state;\n    console.log(textArray[position]);\n    return (\n      <section\n        className=\"hero is-fullheight\"\n        style={{\n          display: active ? \"block\" : \"none\"\n        }}\n      >\n        <Navbar />\n        <nav className=\"level\">\n          <div className=\"level-item has-text-centered\">\n            <div>\n              <div className=\"container\"> {textArray[position]} </div>\n              <FontAwesomeIcon icon=\"play\" />\n            </div>\n          </div>\n        </nav>\n      </section>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    active: state.toggle.spreed,\n    textArray: state.text ? state.text.split() : []\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  null\n)(Spreeder);\n"]},"metadata":{},"sourceType":"module"}