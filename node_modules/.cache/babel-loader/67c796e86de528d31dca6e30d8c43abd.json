{"ast":null,"code":"var _jsxFileName = \"/Users/Overseer/Desktop/spreeder/options/src/components/Navbar/Navbar.tsx\";\nimport React from \"react\";\nimport { setToggle } from \"../../actions\";\nimport { connect } from \"react-redux\";\n\nclass Navbar extends React.Component {\n  render() {\n    const _this$props = this.props,\n          toggleBreadcrumb = _this$props.toggleBreadcrumb,\n          active = _this$props.active,\n          isSpreeding = _this$props.isSpreeding;\n    return React.createElement(\"div\", {\n      className: \"hero-head\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, React.createElement(\"nav\", {\n      className: \"navbar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"navbar-brand\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      className: \"navbar-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: process.env.PUBLIC_URL + \"icon.png\",\n      alt: \"Logo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      id: \"navbarMenuHeroA\",\n      className: \"navbar-menu\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"navbar-end\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"navbar-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(\"nav\", {\n      className: \"breadcrumb\",\n      \"aria-label\": \"breadcrumbs\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      className: active ? \"is-active\" : \"\",\n      onClick: toggleBreadcrumb,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"#\",\n      style: {\n        color: isSpreeding ? \"\" : active ? \"\" : \"ghostwhite\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \" \", \"spreed\", \" \")), React.createElement(\"li\", {\n      className: !active ? \"is-active\" : \"\",\n      onClick: toggleBreadcrumb,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"#\",\n      style: {\n        color: isSpreeding ? \"\" : !active ? \"\" : \"ghostwhite\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \" \", \"text\", \" \")))))))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    active: state.toggle.spreed,\n    isSpreeding: state.spreeding\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    toggleBreadcrumb: () => dispatch(setToggle(\"BREADCRUMB\"))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Navbar);","map":{"version":3,"sources":["/Users/Overseer/Desktop/spreeder/options/src/components/Navbar/Navbar.tsx"],"names":["React","setToggle","connect","Navbar","Component","render","props","toggleBreadcrumb","active","isSpreeding","process","env","PUBLIC_URL","color","mapStateToProps","state","toggle","spreed","spreeding","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,eAA1B;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAQA,MAAMC,MAAN,SAAqBH,KAAK,CAACI,SAA3B,CAAkD;AAChDC,EAAAA,MAAM,GAAG;AAAA,wBAC2C,KAAKC,KADhD;AAAA,UACCC,gBADD,eACCA,gBADD;AAAA,UACmBC,MADnB,eACmBA,MADnB;AAAA,UAC2BC,WAD3B,eAC2BA,WAD3B;AAEP,WACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAG,MAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,GAAG,EAAEC,OAAO,CAACC,GAAR,CAAYC,UAAZ,GAAyB,UAAnC;AAA+C,MAAA,GAAG,EAAC,MAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CADF,EAME;AAAK,MAAA,EAAE,EAAC,iBAAR;AAA0B,MAAA,SAAS,EAAC,aAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAA4B,oBAAW,aAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,SAAS,EAAEJ,MAAM,GAAG,WAAH,GAAiB,EADpC;AAEE,MAAA,OAAO,EAAED,gBAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIE;AACE,MAAA,IAAI,EAAC,GADP;AAEE,MAAA,KAAK,EAAE;AACLM,QAAAA,KAAK,EAAEJ,WAAW,GAAG,EAAH,GAAQD,MAAM,GAAG,EAAH,GAAQ;AADnC,OAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMG,GANH,YAOS,GAPT,CAJF,CADF,EAeE;AACE,MAAA,SAAS,EAAE,CAACA,MAAD,GAAU,WAAV,GAAwB,EADrC;AAEE,MAAA,OAAO,EAAED,gBAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIE;AACE,MAAA,IAAI,EAAC,GADP;AAEE,MAAA,KAAK,EAAE;AACLM,QAAAA,KAAK,EAAEJ,WAAW,GAAG,EAAH,GAAQ,CAACD,MAAD,GAAU,EAAV,GAAe;AADpC,OAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMG,GANH,UAOO,GAPP,CAJF,CAfF,CADF,CADF,CADF,CADF,CANF,CADF,CADF;AAiDD;;AApD+C;;AAuDlD,MAAMM,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLP,IAAAA,MAAM,EAAEO,KAAK,CAACC,MAAN,CAAaC,MADhB;AAELR,IAAAA,WAAW,EAAEM,KAAK,CAACG;AAFd,GAAP;AAID,CALD;;AAOA,MAAMC,kBAAkB,GAAGC,QAAQ,IAAI;AACrC,SAAO;AACLb,IAAAA,gBAAgB,EAAE,MAAMa,QAAQ,CAACnB,SAAS,CAAC,YAAD,CAAV;AAD3B,GAAP;AAGD,CAJD;;AAMA,eAAeC,OAAO,CACpBY,eADoB,EAEpBK,kBAFoB,CAAP,CAGbhB,MAHa,CAAf","sourcesContent":["import React from \"react\";\nimport { setToggle } from \"../../actions\";\nimport { connect } from \"react-redux\";\n\ninterface NavbarProps {\n  toggleBreadcrumb(): any;\n  active: boolean;\n  isSpreeding: boolean;\n}\n\nclass Navbar extends React.Component<NavbarProps> {\n  render() {\n    const { toggleBreadcrumb, active, isSpreeding } = this.props;\n    return (\n      <div className=\"hero-head\">\n        <nav className=\"navbar\">\n          <div className=\"navbar-brand\">\n            <a className=\"navbar-item\">\n              <img src={process.env.PUBLIC_URL + \"icon.png\"} alt=\"Logo\" />\n            </a>\n          </div>\n          <div id=\"navbarMenuHeroA\" className=\"navbar-menu\">\n            <div className=\"navbar-end\">\n              <div className=\"navbar-item\">\n                <nav className=\"breadcrumb\" aria-label=\"breadcrumbs\">\n                  <ul>\n                    <li\n                      className={active ? \"is-active\" : \"\"}\n                      onClick={toggleBreadcrumb}\n                    >\n                      <a\n                        href=\"#\"\n                        style={{\n                          color: isSpreeding ? \"\" : active ? \"\" : \"ghostwhite\"\n                        }}\n                      >\n                        {\" \"}\n                        spreed{\" \"}\n                      </a>\n                    </li>\n                    <li\n                      className={!active ? \"is-active\" : \"\"}\n                      onClick={toggleBreadcrumb}\n                    >\n                      <a\n                        href=\"#\"\n                        style={{\n                          color: isSpreeding ? \"\" : !active ? \"\" : \"ghostwhite\"\n                        }}\n                      >\n                        {\" \"}\n                        text{\" \"}\n                      </a>\n                    </li>\n                  </ul>\n                </nav>\n              </div>\n            </div>\n          </div>\n        </nav>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    active: state.toggle.spreed,\n    isSpreeding: state.spreeding\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    toggleBreadcrumb: () => dispatch(setToggle(\"BREADCRUMB\"))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Navbar);\n"]},"metadata":{},"sourceType":"module"}