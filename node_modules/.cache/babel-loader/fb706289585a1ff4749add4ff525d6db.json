{"ast":null,"code":"var _jsxFileName = \"/Users/Overseer/Desktop/spreeder/options/src/components/Body/Spreeder/NumWords/NumWords.tsx\";\nimport React from \"react\";\nimport Num from \"../../../Num\";\nimport { connect } from \"react-redux\";\nimport { setWords } from \"../../../../actions\";\n\nclass NumWords extends React.Component {\n  constructor(props) {\n    super(props);\n    this.pause = this.pause.bind(this);\n  }\n\n  pause() {\n    const isSpreeding = this.props.isSpreeding;\n    const playPauseButton = document.querySelector(\"#playPause\");\n\n    if (isSpreeding) {\n      playPauseButton.click();\n    }\n  }\n\n  render() {\n    const _this$props = this.props,\n          words = _this$props.words,\n          setWords = _this$props.setWords;\n    return React.createElement(Num, {\n      icon: \"exchange-alt\",\n      label: \"Words: \" + words,\n      handleIncrement: () => {\n        this.pause();\n        setWords(words + 1);\n      },\n      handleDecrement: () => {\n        this.pause();\n\n        if (words > 1) {\n          setWords(words - 1);\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    });\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    words: state.words,\n    isSpreeding: state.spreeding\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setWords: words => dispatch(setWords(words))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NumWords);","map":{"version":3,"sources":["/Users/Overseer/Desktop/spreeder/options/src/components/Body/Spreeder/NumWords/NumWords.tsx"],"names":["React","Num","connect","setWords","NumWords","Component","constructor","props","pause","bind","isSpreeding","playPauseButton","document","querySelector","click","render","words","mapStateToProps","state","spreeding","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,cAAhB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,QAAyB,qBAAzB;;AAQA,MAAMC,QAAN,SAAuBJ,KAAK,CAACK,SAA7B,CAAsD;AACpDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa,KAAKA,KAAL,CAAWC,IAAX,CAAgB,IAAhB,CAAb;AACD;;AAEDD,EAAAA,KAAK,GAAG;AAAA,UACEE,WADF,GACkB,KAAKH,KADvB,CACEG,WADF;AAEN,UAAMC,eAAe,GAAGC,QAAQ,CAACC,aAAT,CAAuB,YAAvB,CAAxB;;AACA,QAAIH,WAAJ,EAAiB;AACfC,MAAAA,eAAe,CAACG,KAAhB;AACD;AACF;;AACDC,EAAAA,MAAM,GAAG;AAAA,wBACqB,KAAKR,KAD1B;AAAA,UACCS,KADD,eACCA,KADD;AAAA,UACQb,QADR,eACQA,QADR;AAEP,WACE,oBAAC,GAAD;AACE,MAAA,IAAI,EAAC,cADP;AAEE,MAAA,KAAK,EAAE,YAAYa,KAFrB;AAGE,MAAA,eAAe,EAAE,MAAM;AACrB,aAAKR,KAAL;AACAL,QAAAA,QAAQ,CAACa,KAAK,GAAG,CAAT,CAAR;AACD,OANH;AAOE,MAAA,eAAe,EAAE,MAAM;AACrB,aAAKR,KAAL;;AACA,YAAIQ,KAAK,GAAG,CAAZ,EAAe;AACbb,UAAAA,QAAQ,CAACa,KAAK,GAAG,CAAT,CAAR;AACD;AACF,OAZH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAgBD;;AA/BmD;;AAkCtD,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLF,IAAAA,KAAK,EAAEE,KAAK,CAACF,KADR;AAELN,IAAAA,WAAW,EAAEQ,KAAK,CAACC;AAFd,GAAP;AAID,CALD;;AAOA,MAAMC,kBAAkB,GAAGC,QAAQ,IAAI;AACrC,SAAO;AACLlB,IAAAA,QAAQ,EAAEa,KAAK,IAAIK,QAAQ,CAAClB,QAAQ,CAACa,KAAD,CAAT;AADtB,GAAP;AAGD,CAJD;;AAMA,eAAed,OAAO,CACpBe,eADoB,EAEpBG,kBAFoB,CAAP,CAGbhB,QAHa,CAAf","sourcesContent":["import React from \"react\";\nimport Num from \"../../../Num\";\nimport { connect } from \"react-redux\";\nimport { setWords } from \"../../../../actions\";\n\ninterface NumWordsProps {\n  words: number;\n  setWords(words: number): any;\n  isSpreeding: boolean;\n}\n\nclass NumWords extends React.Component<NumWordsProps> {\n  constructor(props) {\n    super(props);\n    this.pause = this.pause.bind(this);\n  }\n\n  pause() {\n    const { isSpreeding } = this.props;\n    const playPauseButton = document.querySelector(\"#playPause\") as HTMLElement;\n    if (isSpreeding) {\n      playPauseButton.click();\n    }\n  }\n  render() {\n    const { words, setWords } = this.props;\n    return (\n      <Num\n        icon=\"exchange-alt\"\n        label={\"Words: \" + words}\n        handleIncrement={() => {\n          this.pause();\n          setWords(words + 1);\n        }}\n        handleDecrement={() => {\n          this.pause();\n          if (words > 1) {\n            setWords(words - 1);\n          }\n        }}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    words: state.words,\n    isSpreeding: state.spreeding\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setWords: words => dispatch(setWords(words))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(NumWords);\n"]},"metadata":{},"sourceType":"module"}