{"ast":null,"code":"var _jsxFileName = \"/Users/Overseer/Desktop/spreeder/options/src/components/Body/Spreeder/Spreeder.tsx\";\n\n/*global chrome*/\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport PlayPause from \"./PlayPause\";\nimport ChangeSpeed from \"./ChangeSpeed\";\nimport FontSize from \"./FontSize\";\nimport { partition, stringToWordArray } from \"../../../utils\";\nimport NumLines from \"./NumLines\";\nimport NumWords from \"./NumWords\";\n\nclass Spreeder extends React.Component {\n  render() {\n    const _this$props = this.props,\n          textArray = _this$props.textArray,\n          position = _this$props.position;\n    console.log(textArray);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"has-text-centered\",\n      style: {\n        position: \"absolute\",\n        top: \"44vh\",\n        width: \"-webkit-fill-available\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, textArray.length ? textArray[position].map(line => {\n      return React.createElement(\"div\", {\n        className: \"title has-text-white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, line.join(\" \"));\n    }) : React.createElement(\"div\", {\n      className: \"title has-text-white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, \"\\\"Add text to begin spreeding\\\"\")), React.createElement(\"div\", {\n      className: \"hero-foot\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"nav\", {\n      className: \"tabs is-boxed is-fullwidth\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(ChangeSpeed, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }), React.createElement(NumLines, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }), React.createElement(PlayPause, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }), React.createElement(NumWords, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }), React.createElement(FontSize, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    textArray: state.text ? partition(state.lines * state.words, stringToWordArray(state.text)).map(block => {\n      return partition(state.words, block);\n    }) : [],\n    position: state.position\n  };\n};\n\nexport default connect(mapStateToProps, null)(Spreeder);","map":{"version":3,"sources":["/Users/Overseer/Desktop/spreeder/options/src/components/Body/Spreeder/Spreeder.tsx"],"names":["React","connect","PlayPause","ChangeSpeed","FontSize","partition","stringToWordArray","NumLines","NumWords","Spreeder","Component","render","props","textArray","position","console","log","top","width","length","map","line","join","mapStateToProps","state","text","lines","words","block"],"mappings":";;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,SAAT,EAAoBC,iBAApB,QAA6C,gBAA7C;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAOA,MAAMC,QAAN,SAAuBT,KAAK,CAACU,SAA7B,CAAsD;AACpDC,EAAAA,MAAM,GAAG;AAAA,wBACyB,KAAKC,KAD9B;AAAA,UACCC,SADD,eACCA,SADD;AAAA,UACYC,QADZ,eACYA,QADZ;AAEPC,IAAAA,OAAO,CAACC,GAAR,CAAYH,SAAZ;AACA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,SAAS,EAAC,mBADZ;AAEE,MAAA,KAAK,EAAE;AACLC,QAAAA,QAAQ,EAAE,UADL;AAELG,QAAAA,GAAG,EAAE,MAFA;AAGLC,QAAAA,KAAK,EAAE;AAHF,OAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQGL,SAAS,CAACM,MAAV,GACCN,SAAS,CAACC,QAAD,CAAT,CAAoBM,GAApB,CAAwBC,IAAI,IAAI;AAC9B,aACE;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAuCA,IAAI,CAACC,IAAL,CAAU,GAAV,CAAvC,CADF;AAGD,KAJD,CADD,GAOC;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCAfJ,CADF,EAqBE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,EAIE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,EAKE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,CADF,CADF,CArBF,CADF;AAmCD;;AAvCmD;;AA0CtD,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLX,IAAAA,SAAS,EAAEW,KAAK,CAACC,IAAN,GACPpB,SAAS,CAACmB,KAAK,CAACE,KAAN,GAAcF,KAAK,CAACG,KAArB,EAA4BrB,iBAAiB,CAACkB,KAAK,CAACC,IAAP,CAA7C,CAAT,CAAoEL,GAApE,CACEQ,KAAK,IAAI;AACP,aAAOvB,SAAS,CAACmB,KAAK,CAACG,KAAP,EAAcC,KAAd,CAAhB;AACD,KAHH,CADO,GAMP,EAPC;AAQLd,IAAAA,QAAQ,EAAEU,KAAK,CAACV;AARX,GAAP;AAUD,CAXD;;AAaA,eAAeb,OAAO,CACpBsB,eADoB,EAEpB,IAFoB,CAAP,CAGbd,QAHa,CAAf","sourcesContent":["/*global chrome*/\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport PlayPause from \"./PlayPause\";\nimport ChangeSpeed from \"./ChangeSpeed\";\nimport FontSize from \"./FontSize\";\nimport { partition, stringToWordArray } from \"../../../utils\";\nimport NumLines from \"./NumLines\";\nimport NumWords from \"./NumWords\";\n\ninterface SpreederProps {\n  textArray: string[][][] | [];\n  position: number;\n}\n\nclass Spreeder extends React.Component<SpreederProps> {\n  render() {\n    const { textArray, position } = this.props;\n    console.log(textArray);\n    return (\n      <div>\n        <div\n          className=\"has-text-centered\"\n          style={{\n            position: \"absolute\",\n            top: \"44vh\",\n            width: \"-webkit-fill-available\"\n          }}\n        >\n          {textArray.length ? (\n            textArray[position].map(line => {\n              return (\n                <div className=\"title has-text-white\">{line.join(\" \")}</div>\n              );\n            })\n          ) : (\n            <div className=\"title has-text-white\">\n              \"Add text to begin spreeding\"\n            </div>\n          )}\n        </div>\n        <div className=\"hero-foot\">\n          <nav className=\"tabs is-boxed is-fullwidth\">\n            <ul>\n              <ChangeSpeed />\n              <NumLines />\n              <PlayPause />\n              <NumWords />\n              <FontSize />\n            </ul>\n          </nav>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    textArray: state.text\n      ? partition(state.lines * state.words, stringToWordArray(state.text)).map(\n          block => {\n            return partition(state.words, block);\n          }\n        )\n      : [],\n    position: state.position\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  null\n)(Spreeder);\n"]},"metadata":{},"sourceType":"module"}