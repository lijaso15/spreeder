{"ast":null,"code":"var _jsxFileName = \"/Users/Overseer/Desktop/spreeder/options/src/components/Body/Text/Text.tsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { setText } from \"../../../actions\";\n\nclass Text extends React.Component {\n  constructor(props) {\n    super(props);\n    this.saveChanges = this.saveChanges.bind(this);\n  }\n\n  saveChanges() {\n    const setText = this.props.setText;\n    const text = document.querySelector(\"textarea\");\n    setText(text ? text.value : \"\");\n  }\n\n  render() {\n    const text = this.props.text;\n    return React.createElement(\"div\", {\n      className: \"hero-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, \" \", React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, \" \", React.createElement(\"textarea\", {\n      defaultValue: text,\n      className: \"textarea is-warning\",\n      placeholder: \"insert text here\",\n      style: {\n        height: \"-webkit-fill-available\",\n        backgroundColor: \"grey\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      style: {\n        textAlign: \"right\",\n        paddingTop: \"4px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"button is-warning\",\n      onClick: this.saveChanges,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \" \", \"Save Changes\", \" \"))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    text: state.text\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setText: text => dispatch(setText(text))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Text);","map":{"version":3,"sources":["/Users/Overseer/Desktop/spreeder/options/src/components/Body/Text/Text.tsx"],"names":["React","connect","setText","Text","Component","constructor","props","saveChanges","bind","text","document","querySelector","value","render","height","backgroundColor","textAlign","paddingTop","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,QAAwB,kBAAxB;;AAOA,MAAMC,IAAN,SAAmBH,KAAK,CAACI,SAAzB,CAA8C;AAC5CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACD;;AAEDD,EAAAA,WAAW,GAAG;AAAA,UACJL,OADI,GACQ,KAAKI,KADb,CACJJ,OADI;AAEZ,UAAMO,IAAI,GAAGC,QAAQ,CAACC,aAAT,CAAuB,UAAvB,CAAb;AACAT,IAAAA,OAAO,CAACO,IAAI,GAAGA,IAAI,CAACG,KAAR,GAAgB,EAArB,CAAP;AACD;;AAEDC,EAAAA,MAAM,GAAG;AAAA,UACCJ,IADD,GACU,KAAKH,KADf,CACCG,IADD;AAEP,WACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,GADH,EAEE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,GADH,EAEE;AACE,MAAA,YAAY,EAAEA,IADhB;AAEE,MAAA,SAAS,EAAC,qBAFZ;AAGE,MAAA,WAAW,EAAC,kBAHd;AAIE,MAAA,KAAK,EAAE;AACLK,QAAAA,MAAM,EAAE,wBADH;AAELC,QAAAA,eAAe,EAAE;AAFZ,OAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,EAaE;AACE,MAAA,KAAK,EAAE;AACLC,QAAAA,SAAS,EAAE,OADN;AAELC,QAAAA,UAAU,EAAE;AAFP,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAME;AAAQ,MAAA,SAAS,EAAC,mBAAlB;AAAsC,MAAA,OAAO,EAAE,KAAKV,WAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,GADH,kBAEe,GAFf,CANF,CAbF,CAFF,CADF;AA8BD;;AA5C2C;;AA+C9C,MAAMW,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLV,IAAAA,IAAI,EAAEU,KAAK,CAACV;AADP,GAAP;AAGD,CAJD;;AAMA,MAAMW,kBAAkB,GAAGC,QAAQ,IAAI;AACrC,SAAO;AACLnB,IAAAA,OAAO,EAAEO,IAAI,IAAIY,QAAQ,CAACnB,OAAO,CAACO,IAAD,CAAR;AADpB,GAAP;AAGD,CAJD;;AAMA,eAAeR,OAAO,CACpBiB,eADoB,EAEpBE,kBAFoB,CAAP,CAGbjB,IAHa,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { setText } from \"../../../actions\";\n\ninterface TextProps {\n  text: string;\n  setText(text: string): any;\n}\n\nclass Text extends React.Component<TextProps> {\n  constructor(props) {\n    super(props);\n    this.saveChanges = this.saveChanges.bind(this);\n  }\n\n  saveChanges() {\n    const { setText } = this.props;\n    const text = document.querySelector(\"textarea\");\n    setText(text ? text.value : \"\");\n  }\n\n  render() {\n    const { text } = this.props;\n    return (\n      <div className=\"hero-body\">\n        {\" \"}\n        <div className=\"container\">\n          <div>\n            {\" \"}\n            <textarea\n              defaultValue={text}\n              className=\"textarea is-warning\"\n              placeholder=\"insert text here\"\n              style={{\n                height: \"-webkit-fill-available\",\n                backgroundColor: \"grey\"\n              }}\n            />\n          </div>\n          <div\n            style={{\n              textAlign: \"right\",\n              paddingTop: \"4px\"\n            }}\n          >\n            <button className=\"button is-warning\" onClick={this.saveChanges}>\n              {\" \"}\n              Save Changes{\" \"}\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    text: state.text\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setText: text => dispatch(setText(text))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Text);\n"]},"metadata":{},"sourceType":"module"}