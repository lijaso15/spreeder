{"ast":null,"code":"var _jsxFileName = \"/Users/Overseer/Desktop/spreeder/options/src/components/Navbar/Navbar.tsx\";\nimport React from \"react\";\nimport { setToggle } from \"../../actions\";\nimport { connect } from \"react-redux\";\n\nclass Navbar extends React.Component {\n  render() {\n    const toggleBreadcrumb = this.props.toggleBreadcrumb;\n    return React.createElement(\"nav\", {\n      className: \"navbar is-dark\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"navbar-end\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"navbar-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, React.createElement(\"nav\", {\n      className: \"breadcrumb\",\n      \"aria-label\": \"breadcrumbs\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      className: \"is-active\",\n      onClick: toggleBreadcrumb,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"#\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, \" spreed \")), React.createElement(\"li\", {\n      onClick: toggleBreadcrumb,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"#\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, \" text \")))))));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    toggleBreadcrumb: () => dispatch(setToggle(\"BREADCRUMB\"))\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(Navbar);","map":{"version":3,"sources":["/Users/Overseer/Desktop/spreeder/options/src/components/Navbar/Navbar.tsx"],"names":["React","setToggle","connect","Navbar","Component","render","toggleBreadcrumb","props","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,eAA1B;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAMA,MAAMC,MAAN,SAAqBH,KAAK,CAACI,SAA3B,CAAkD;AAChDC,EAAAA,MAAM,GAAG;AAAA,UACCC,gBADD,GACsB,KAAKC,KAD3B,CACCD,gBADD;AAEP,WACE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAA4B,oBAAW,aAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,MAAA,SAAS,EAAC,WAAd;AAA0B,MAAA,OAAO,EAAEA,gBAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAG,MAAA,IAAI,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,CADF,EAIE;AAAI,MAAA,OAAO,EAAEA,gBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAG,MAAA,IAAI,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,CAJF,CADF,CADF,CADF,CADF,CADF;AAkBD;;AArB+C;;AAwBlD,MAAME,kBAAkB,GAAGC,QAAQ,IAAI;AACrC,SAAO;AACLH,IAAAA,gBAAgB,EAAE,MAAMG,QAAQ,CAACR,SAAS,CAAC,YAAD,CAAV;AAD3B,GAAP;AAGD,CAJD;;AAMA,eAAeC,OAAO,CACpB,IADoB,EAEpBM,kBAFoB,CAAP,CAGbL,MAHa,CAAf","sourcesContent":["import React from \"react\";\nimport { setToggle } from \"../../actions\";\nimport { connect } from \"react-redux\";\n\ninterface NavbarProps {\n  toggleBreadcrumb(): any;\n}\n\nclass Navbar extends React.Component<NavbarProps> {\n  render() {\n    const { toggleBreadcrumb } = this.props;\n    return (\n      <nav className=\"navbar is-dark\">\n        <div className=\"navbar-end\">\n          <div className=\"navbar-item\">\n            <nav className=\"breadcrumb\" aria-label=\"breadcrumbs\">\n              <ul>\n                <li className=\"is-active\" onClick={toggleBreadcrumb}>\n                  <a href=\"#\"> spreed </a>\n                </li>\n                <li onClick={toggleBreadcrumb}>\n                  <a href=\"#\"> text </a>\n                </li>\n              </ul>\n            </nav>\n          </div>\n        </div>\n      </nav>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    toggleBreadcrumb: () => dispatch(setToggle(\"BREADCRUMB\"))\n  };\n};\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(Navbar);\n"]},"metadata":{},"sourceType":"module"}