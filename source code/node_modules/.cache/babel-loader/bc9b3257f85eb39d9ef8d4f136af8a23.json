{"ast":null,"code":"var _jsxFileName = \"/Users/Overseer/Desktop/spreeder/source code/src/components/Body/Spreeder/ChangeSpeed/ChangeSpeed.tsx\";\nimport React from \"react\";\nimport Num from \"../../../Num\";\nimport { connect } from \"react-redux\";\nimport { setWPM } from \"../../../../actions\";\n\nclass ChangeSpeed extends React.Component {\n  constructor(props) {\n    super(props);\n    this.pause = this.pause.bind(this);\n  }\n\n  pause() {\n    const isSpreeding = this.props.isSpreeding;\n    const playPauseButton = document.querySelector(\"#playPause\");\n\n    if (isSpreeding) {\n      playPauseButton.click();\n    }\n  }\n\n  render() {\n    const _this$props = this.props,\n          wpm = _this$props.wpm,\n          setWPM = _this$props.setWPM;\n    return React.createElement(Num, {\n      icon: \"grip-lines\",\n      label: wpm + \" WPM\",\n      handleIncrement: () => {\n        this.pause();\n        setWPM(wpm + 10);\n      },\n      handleDecrement: () => {\n        this.pause();\n\n        if (wpm > 10) {\n          setWPM(wpm - 10);\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    });\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    wpm: state.wpm,\n    isSpreeding: state.spreeding\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setWPM: lines => dispatch(setWPM(lines))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChangeSpeed);","map":{"version":3,"sources":["/Users/Overseer/Desktop/spreeder/source code/src/components/Body/Spreeder/ChangeSpeed/ChangeSpeed.tsx"],"names":["React","Num","connect","setWPM","ChangeSpeed","Component","constructor","props","pause","bind","isSpreeding","playPauseButton","document","querySelector","click","render","wpm","mapStateToProps","state","spreeding","mapDispatchToProps","dispatch","lines"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,cAAhB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,MAAT,QAAuB,qBAAvB;;AAQA,MAAMC,WAAN,SAA0BJ,KAAK,CAACK,SAAhC,CAA4D;AAC1DC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa,KAAKA,KAAL,CAAWC,IAAX,CAAgB,IAAhB,CAAb;AACD;;AAEDD,EAAAA,KAAK,GAAG;AAAA,UACEE,WADF,GACkB,KAAKH,KADvB,CACEG,WADF;AAEN,UAAMC,eAAe,GAAGC,QAAQ,CAACC,aAAT,CAAuB,YAAvB,CAAxB;;AACA,QAAIH,WAAJ,EAAiB;AACfC,MAAAA,eAAe,CAACG,KAAhB;AACD;AACF;;AAEDC,EAAAA,MAAM,GAAG;AAAA,wBACiB,KAAKR,KADtB;AAAA,UACCS,GADD,eACCA,GADD;AAAA,UACMb,MADN,eACMA,MADN;AAEP,WACE,oBAAC,GAAD;AACE,MAAA,IAAI,EAAC,YADP;AAEE,MAAA,KAAK,EAAEa,GAAG,GAAG,MAFf;AAGE,MAAA,eAAe,EAAE,MAAM;AACrB,aAAKR,KAAL;AACAL,QAAAA,MAAM,CAACa,GAAG,GAAG,EAAP,CAAN;AACD,OANH;AAOE,MAAA,eAAe,EAAE,MAAM;AACrB,aAAKR,KAAL;;AACA,YAAIQ,GAAG,GAAG,EAAV,EAAc;AACZb,UAAAA,MAAM,CAACa,GAAG,GAAG,EAAP,CAAN;AACD;AACF,OAZH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAgBD;;AAhCyD;;AAmC5D,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLF,IAAAA,GAAG,EAAEE,KAAK,CAACF,GADN;AAELN,IAAAA,WAAW,EAAEQ,KAAK,CAACC;AAFd,GAAP;AAID,CALD;;AAOA,MAAMC,kBAAkB,GAAGC,QAAQ,IAAI;AACrC,SAAO;AACLlB,IAAAA,MAAM,EAAEmB,KAAK,IAAID,QAAQ,CAAClB,MAAM,CAACmB,KAAD,CAAP;AADpB,GAAP;AAGD,CAJD;;AAMA,eAAepB,OAAO,CACpBe,eADoB,EAEpBG,kBAFoB,CAAP,CAGbhB,WAHa,CAAf","sourcesContent":["import React from \"react\";\nimport Num from \"../../../Num\";\nimport { connect } from \"react-redux\";\nimport { setWPM } from \"../../../../actions\";\n\ninterface ChangeSpeedProps {\n  wpm: number;\n  setWPM(value: number): any;\n  isSpreeding: boolean;\n}\n\nclass ChangeSpeed extends React.Component<ChangeSpeedProps> {\n  constructor(props) {\n    super(props);\n    this.pause = this.pause.bind(this);\n  }\n\n  pause() {\n    const { isSpreeding } = this.props;\n    const playPauseButton = document.querySelector(\"#playPause\") as HTMLElement;\n    if (isSpreeding) {\n      playPauseButton.click();\n    }\n  }\n\n  render() {\n    const { wpm, setWPM } = this.props;\n    return (\n      <Num\n        icon=\"grip-lines\"\n        label={wpm + \" WPM\"}\n        handleIncrement={() => {\n          this.pause();\n          setWPM(wpm + 10);\n        }}\n        handleDecrement={() => {\n          this.pause();\n          if (wpm > 10) {\n            setWPM(wpm - 10);\n          }\n        }}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    wpm: state.wpm,\n    isSpreeding: state.spreeding\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setWPM: lines => dispatch(setWPM(lines))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ChangeSpeed);\n"]},"metadata":{},"sourceType":"module"}