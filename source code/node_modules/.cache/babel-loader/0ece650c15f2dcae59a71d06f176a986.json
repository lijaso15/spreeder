{"ast":null,"code":"var _jsxFileName = \"/Users/Overseer/Desktop/spreeder/options/src/components/Spreeder/Spreeder.tsx\";\n\n/*global chrome*/\nimport React from \"react\";\nimport Navbar from \"../Navbar\";\nimport { connect } from \"react-redux\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nclass Spreeder extends React.Component {\n  constructor(props) {\n    super(props);\n    this.timer = void 0;\n    this.state = {\n      position: 0,\n      isSpreeding: false\n    };\n    this.startTimer = this.startTimer.bind(this);\n    this.stopTimer = this.stopTimer.bind(this);\n  }\n\n  startTimer() {\n    this.timer = setInterval(() => this.tick(), 1000);\n  }\n\n  stopTimer() {\n    clearInterval(this.timer);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timer);\n  }\n\n  tick() {\n    const textArray = this.props.textArray;\n    const position = this.state.position;\n    this.setState({\n      position: position < textArray.length ? position + 1 : position\n    });\n  }\n\n  render() {\n    const _this$props = this.props,\n          active = _this$props.active,\n          textArray = _this$props.textArray;\n    const _this$state = this.state,\n          position = _this$state.position,\n          isSpreeding = _this$state.isSpreeding;\n    return React.createElement(\"section\", {\n      className: \"hero is-fullheight\",\n      style: {\n        display: active ? \"block\" : \"none\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        position: \"absolute\",\n        top: \"44vh\",\n        width: \"-webkit-fill-available\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container has-text-centered\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \" \", textArray[position], \" \"), React.createElement(\"nav\", {\n      className: \"level\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"level-item has-text-centered\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, isSpreeding ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      onClick: this.stopTimer,\n      style: {\n        cursor: \"pointer\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \" \", React.createElement(FontAwesomeIcon, {\n      icon: \"pause\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }), \" \")) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      onClick: this.startTimer,\n      style: {\n        cursor: \"pointer\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \" \", React.createElement(FontAwesomeIcon, {\n      icon: \"play\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }), \" \"))))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    active: state.toggle.spreed,\n    textArray: state.text ? state.text.trim().replace(/\\s\\s+/g, \" \").split(/\\s/) : []\n  };\n};\n\nexport default connect(mapStateToProps, null)(Spreeder);","map":{"version":3,"sources":["/Users/Overseer/Desktop/spreeder/options/src/components/Spreeder/Spreeder.tsx"],"names":["React","Navbar","connect","FontAwesomeIcon","Spreeder","Component","constructor","props","timer","state","position","isSpreeding","startTimer","bind","stopTimer","setInterval","tick","clearInterval","componentWillUnmount","textArray","setState","length","render","active","display","top","width","cursor","mapStateToProps","toggle","spreed","text","trim","replace","split"],"mappings":";;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,eAAT,QAAgC,gCAAhC;;AAYA,MAAMC,QAAN,SAAuBJ,KAAK,CAACK,SAA7B,CAAqE;AAEnEC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AADiB,SADnBC,KACmB;AAEjB,SAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE,CADC;AAEXC,MAAAA,WAAW,EAAE;AAFF,KAAb;AAIA,SAAKC,UAAL,GAAkB,KAAKA,UAAL,CAAgBC,IAAhB,CAAqB,IAArB,CAAlB;AACA,SAAKC,SAAL,GAAiB,KAAKA,SAAL,CAAeD,IAAf,CAAoB,IAApB,CAAjB;AACD;;AAEDD,EAAAA,UAAU,GAAG;AACX,SAAKJ,KAAL,GAAaO,WAAW,CAAC,MAAM,KAAKC,IAAL,EAAP,EAAoB,IAApB,CAAxB;AACD;;AAEDF,EAAAA,SAAS,GAAG;AACVG,IAAAA,aAAa,CAAC,KAAKT,KAAN,CAAb;AACD;;AAEDU,EAAAA,oBAAoB,GAAG;AACrBD,IAAAA,aAAa,CAAC,KAAKT,KAAN,CAAb;AACD;;AAEDQ,EAAAA,IAAI,GAAG;AAAA,UACGG,SADH,GACiB,KAAKZ,KADtB,CACGY,SADH;AAAA,UAEGT,QAFH,GAEgB,KAAKD,KAFrB,CAEGC,QAFH;AAGL,SAAKU,QAAL,CAAc;AACZV,MAAAA,QAAQ,EAAEA,QAAQ,GAAGS,SAAS,CAACE,MAArB,GAA8BX,QAAQ,GAAG,CAAzC,GAA6CA;AAD3C,KAAd;AAGD;;AAEDY,EAAAA,MAAM,GAAG;AAAA,wBACuB,KAAKf,KAD5B;AAAA,UACCgB,MADD,eACCA,MADD;AAAA,UACSJ,SADT,eACSA,SADT;AAAA,wBAE2B,KAAKV,KAFhC;AAAA,UAECC,QAFD,eAECA,QAFD;AAAA,UAEWC,WAFX,eAEWA,WAFX;AAGP,WACE;AACE,MAAA,SAAS,EAAC,oBADZ;AAEE,MAAA,KAAK,EAAE;AACLa,QAAAA,OAAO,EAAED,MAAM,GAAG,OAAH,GAAa;AADvB,OAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAME,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,EAOE;AACE,MAAA,KAAK,EAAE;AACLb,QAAAA,QAAQ,EAAE,UADL;AAELe,QAAAA,GAAG,EAAE,MAFA;AAGLC,QAAAA,KAAK,EAAE;AAHF,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOE;AAAK,MAAA,SAAS,EAAC,6BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,GADH,EAEGP,SAAS,CAACT,QAAD,CAFZ,EAEwB,GAFxB,CAPF,EAWE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,8BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGC,WAAW,GACV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,OAAO,EAAE,KAAKG,SADhB;AAEE,MAAA,KAAK,EAAE;AACLa,QAAAA,MAAM,EAAE;AADH,OAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMG,GANH,EAOE,oBAAC,eAAD;AAAiB,MAAA,IAAI,EAAC,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,EAOmC,GAPnC,CADF,CADU,GAaV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,OAAO,EAAE,KAAKf,UADhB;AAEE,MAAA,KAAK,EAAE;AACLe,QAAAA,MAAM,EAAE;AADH,OAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMG,GANH,EAOE,oBAAC,eAAD;AAAiB,MAAA,IAAI,EAAC,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,EAOkC,GAPlC,CADF,CAdJ,CADF,CAXF,CAPF,CADF;AAmDD;;AAtFkE;;AAyFrE,MAAMC,eAAe,GAAGnB,KAAK,IAAI;AAC/B,SAAO;AACLc,IAAAA,MAAM,EAAEd,KAAK,CAACoB,MAAN,CAAaC,MADhB;AAELX,IAAAA,SAAS,EAAEV,KAAK,CAACsB,IAAN,GACPtB,KAAK,CAACsB,IAAN,CACGC,IADH,GAEGC,OAFH,CAEW,QAFX,EAEqB,GAFrB,EAGGC,KAHH,CAGS,IAHT,CADO,GAKP;AAPC,GAAP;AASD,CAVD;;AAYA,eAAehC,OAAO,CACpB0B,eADoB,EAEpB,IAFoB,CAAP,CAGbxB,QAHa,CAAf","sourcesContent":["/*global chrome*/\nimport React from \"react\";\nimport Navbar from \"../Navbar\";\nimport { connect } from \"react-redux\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\ninterface SpreederProps {\n  active: boolean;\n  textArray: string[];\n}\n\ninterface SpreederState {\n  position: number;\n  isSpreeding: boolean;\n}\n\nclass Spreeder extends React.Component<SpreederProps, SpreederState> {\n  timer: any;\n  constructor(props) {\n    super(props);\n    this.state = {\n      position: 0,\n      isSpreeding: false\n    };\n    this.startTimer = this.startTimer.bind(this);\n    this.stopTimer = this.stopTimer.bind(this);\n  }\n\n  startTimer() {\n    this.timer = setInterval(() => this.tick(), 1000);\n  }\n\n  stopTimer() {\n    clearInterval(this.timer);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timer);\n  }\n\n  tick() {\n    const { textArray } = this.props;\n    const { position } = this.state;\n    this.setState({\n      position: position < textArray.length ? position + 1 : position\n    });\n  }\n\n  render() {\n    const { active, textArray } = this.props;\n    const { position, isSpreeding } = this.state;\n    return (\n      <section\n        className=\"hero is-fullheight\"\n        style={{\n          display: active ? \"block\" : \"none\"\n        }}\n      >\n        <Navbar />\n        <div\n          style={{\n            position: \"absolute\",\n            top: \"44vh\",\n            width: \"-webkit-fill-available\"\n          }}\n        >\n          <div className=\"container has-text-centered\">\n            {\" \"}\n            {textArray[position]}{\" \"}\n          </div>\n          <nav className=\"level\">\n            <div className=\"level-item has-text-centered\">\n              {isSpreeding ? (\n                <div>\n                  <span\n                    onClick={this.stopTimer}\n                    style={{\n                      cursor: \"pointer\"\n                    }}\n                  >\n                    {\" \"}\n                    <FontAwesomeIcon icon=\"pause\" />{\" \"}\n                  </span>\n                </div>\n              ) : (\n                <div>\n                  <span\n                    onClick={this.startTimer}\n                    style={{\n                      cursor: \"pointer\"\n                    }}\n                  >\n                    {\" \"}\n                    <FontAwesomeIcon icon=\"play\" />{\" \"}\n                  </span>\n                </div>\n              )}\n            </div>\n          </nav>\n        </div>\n      </section>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    active: state.toggle.spreed,\n    textArray: state.text\n      ? state.text\n          .trim()\n          .replace(/\\s\\s+/g, \" \")\n          .split(/\\s/)\n      : []\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  null\n)(Spreeder);\n"]},"metadata":{},"sourceType":"module"}