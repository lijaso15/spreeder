{"ast":null,"code":"var _jsxFileName = \"/Users/Overseer/Desktop/spreeder/options/src/components/Num/Caret/Caret.tsx\";\nimport React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nconst Caret = ({\n  isHovered,\n  handleClick,\n  direction\n}) => {\n  if (isHovered) {\n    return React.createElement(\"span\", {\n      style: {\n        position: \"absolute\",\n        paddingLeft: direction === \"right\" ? \"10%\" : \"\",\n        paddingRight: direction === \"left\" ? \"10%\" : \"\"\n      },\n      onClick: handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, React.createElement(FontAwesomeIcon, {\n      icon: \"caret-\" + direction,\n      size: \"lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }));\n    return null;\n  }\n};\n\nexport default Caret;","map":{"version":3,"sources":["/Users/Overseer/Desktop/spreeder/options/src/components/Num/Caret/Caret.tsx"],"names":["React","FontAwesomeIcon","Caret","isHovered","handleClick","direction","position","paddingLeft","paddingRight"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,eAAT,QAAgC,gCAAhC;;AASA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,WAAb;AAA0BC,EAAAA;AAA1B,CAAD,KAAuD;AACnE,MAAIF,SAAJ,EAAe;AACb,WACE;AACE,MAAA,KAAK,EAAE;AACLG,QAAAA,QAAQ,EAAE,UADL;AAELC,QAAAA,WAAW,EAAEF,SAAS,KAAK,OAAd,GAAwB,KAAxB,GAAgC,EAFxC;AAGLG,QAAAA,YAAY,EAAEH,SAAS,KAAK,MAAd,GAAuB,KAAvB,GAA+B;AAHxC,OADT;AAME,MAAA,OAAO,EAAED,WANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQE,oBAAC,eAAD;AAAiB,MAAA,IAAI,EAAG,WAAWC,SAAnC;AAA2D,MAAA,IAAI,EAAC,IAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,CADF;AAYA,WAAO,IAAP;AACD;AACF,CAhBD;;AAkBA,eAAeH,KAAf","sourcesContent":["import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconProp } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface CaretProps {\n  isHovered: boolean;\n  handleClick(): any;\n  direction: string;\n}\n\nconst Caret = ({ isHovered, handleClick, direction }: CaretProps) => {\n  if (isHovered) {\n    return (\n      <span\n        style={{\n          position: \"absolute\",\n          paddingLeft: direction === \"right\" ? \"10%\" : \"\",\n          paddingRight: direction === \"left\" ? \"10%\" : \"\"\n        }}\n        onClick={handleClick}\n      >\n        <FontAwesomeIcon icon={(\"caret-\" + direction) as IconProp} size=\"lg\" />\n      </span>\n    );\n    return null;\n  }\n};\n\nexport default Caret;\n"]},"metadata":{},"sourceType":"module"}