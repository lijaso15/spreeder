{"ast":null,"code":"var _jsxFileName = \"/Users/Overseer/Desktop/spreeder/source code/src/components/Body/Spreeder/PlayPause/PlayPause.tsx\";\nimport React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { connect } from \"react-redux\";\nimport { setPosition, setSpreeding } from \"../../../../actions\";\nimport { wordsPerMinToInterval } from \"../../../../utils\";\nimport { partition, stringToWordArray } from \"../../../../utils\";\n\nclass PlayPause extends React.Component {\n  constructor(props) {\n    super(props);\n    this.timer = void 0;\n    this.startTimer = this.startTimer.bind(this);\n    this.stopTimer = this.stopTimer.bind(this);\n  }\n\n  startTimer() {\n    this.timer = setInterval(() => this.tick(), wordsPerMinToInterval(this.props.wpm));\n    this.props.spreedingOn();\n  }\n\n  stopTimer() {\n    clearInterval(this.timer);\n    this.props.spreedingOff();\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timer);\n    this.props.spreedingOff();\n  }\n\n  tick() {\n    const _this$props = this.props,\n          textArray = _this$props.textArray,\n          position = _this$props.position,\n          increment = _this$props.increment;\n\n    if (position < textArray.length - 1) {\n      increment();\n    } else {\n      this.stopTimer();\n    }\n  }\n\n  render() {\n    const _this$props2 = this.props,\n          textArray = _this$props2.textArray,\n          isSpreeding = _this$props2.isSpreeding,\n          position = _this$props2.position,\n          reset = _this$props2.reset;\n    return React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \" \", isSpreeding ? React.createElement(\"a\", {\n      \"data-tip\": \"Pause\",\n      onClick: this.stopTimer,\n      style: {\n        cursor: \"pointer\"\n      },\n      id: \"playPause\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \" \", React.createElement(FontAwesomeIcon, {\n      icon: \"pause\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), \" \") : React.createElement(\"a\", {\n      \"data-tip\": textArray.length ? \"Spreed!\" : \"Add text to start\",\n      onClick: () => {\n        if (textArray.length) {\n          if (textArray.length - 1 === position) {\n            reset();\n          }\n\n          this.startTimer();\n        }\n      },\n      style: {\n        cursor: textArray.length ? \"pointer\" : \"not-allowed\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \" \", React.createElement(FontAwesomeIcon, {\n      icon: \"play\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), \" \"));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    textArray: state.text ? partition(state.lines * state.words, stringToWordArray(state.text)).map(block => {\n      return partition(state.words, block);\n    }) : [],\n    position: state.position,\n    wpm: state.wpm,\n    isSpreeding: state.spreeding\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    increment: () => dispatch(setPosition(\"INCREMENT\")),\n    reset: () => dispatch(setPosition(\"RESET\")),\n    spreedingOn: () => dispatch(setSpreeding(\"ON\")),\n    spreedingOff: () => dispatch(setSpreeding(\"OFF\"))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PlayPause);","map":{"version":3,"sources":["/Users/Overseer/Desktop/spreeder/source code/src/components/Body/Spreeder/PlayPause/PlayPause.tsx"],"names":["React","FontAwesomeIcon","connect","setPosition","setSpreeding","wordsPerMinToInterval","partition","stringToWordArray","PlayPause","Component","constructor","props","timer","startTimer","bind","stopTimer","setInterval","tick","wpm","spreedingOn","clearInterval","spreedingOff","componentWillUnmount","textArray","position","increment","length","render","isSpreeding","reset","cursor","mapStateToProps","state","text","lines","words","map","block","spreeding","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { connect } from \"react-redux\";\nimport { setPosition, setSpreeding } from \"../../../../actions\";\nimport { wordsPerMinToInterval } from \"../../../../utils\";\nimport { partition, stringToWordArray } from \"../../../../utils\";\n\ninterface PlayPauseProps {\n  textArray: string[][][] | [];\n  position: number;\n  increment(): any;\n  reset(): any;\n  wpm: number;\n  isSpreeding: boolean;\n  spreedingOn(): any;\n  spreedingOff(): any;\n}\n\nclass PlayPause extends React.Component<PlayPauseProps> {\n  timer: any;\n  constructor(props) {\n    super(props);\n    this.startTimer = this.startTimer.bind(this);\n    this.stopTimer = this.stopTimer.bind(this);\n  }\n\n  startTimer() {\n    this.timer = setInterval(\n      () => this.tick(),\n      wordsPerMinToInterval(this.props.wpm)\n    );\n    this.props.spreedingOn();\n  }\n\n  stopTimer() {\n    clearInterval(this.timer);\n    this.props.spreedingOff();\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timer);\n    this.props.spreedingOff();\n  }\n\n  tick() {\n    const { textArray, position, increment } = this.props;\n    if (position < textArray.length - 1) {\n      increment();\n    } else {\n      this.stopTimer();\n    }\n  }\n\n  render() {\n    const { textArray, isSpreeding, position, reset } = this.props;\n    return (\n      <li>\n        {\" \"}\n        {isSpreeding ? (\n          <a\n            data-tip=\"Pause\"\n            onClick={this.stopTimer}\n            style={{\n              cursor: \"pointer\"\n            }}\n            id=\"playPause\"\n          >\n            {\" \"}\n            <FontAwesomeIcon icon=\"pause\" />{\" \"}\n          </a>\n        ) : (\n          <a\n            data-tip={textArray.length ? \"Spreed!\" : \"Add text to start\"}\n            onClick={() => {\n              if (textArray.length) {\n                if (textArray.length - 1 === position) {\n                  reset();\n                }\n                this.startTimer();\n              }\n            }}\n            style={{\n              cursor: textArray.length ? \"pointer\" : \"not-allowed\"\n            }}\n          >\n            {\" \"}\n            <FontAwesomeIcon icon=\"play\" />{\" \"}\n          </a>\n        )}\n      </li>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    textArray: state.text\n      ? partition(state.lines * state.words, stringToWordArray(state.text)).map(\n          block => {\n            return partition(state.words, block);\n          }\n        )\n      : [],\n    position: state.position,\n    wpm: state.wpm,\n    isSpreeding: state.spreeding\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    increment: () => dispatch(setPosition(\"INCREMENT\")),\n    reset: () => dispatch(setPosition(\"RESET\")),\n    spreedingOn: () => dispatch(setSpreeding(\"ON\")),\n    spreedingOff: () => dispatch(setSpreeding(\"OFF\"))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(PlayPause);\n"]},"metadata":{},"sourceType":"module"}