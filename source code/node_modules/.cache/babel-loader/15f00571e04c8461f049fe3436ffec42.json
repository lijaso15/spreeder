{"ast":null,"code":"var _jsxFileName = \"/Users/Overseer/Desktop/spreeder/options/src/components/Spreeder/Spreeder.tsx\";\n\n/*global chrome*/\nimport React from \"react\";\nimport Navbar from \"../Navbar\";\nimport { connect } from \"react-redux\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nclass Spreeder extends React.Component {\n  constructor(props) {\n    super(props);\n    this.timer = void 0;\n    this.state = {\n      position: 0\n    };\n  }\n\n  startTimer() {\n    this.timer = setInterval(() => this.tick(), 1000);\n  }\n\n  stopTimer() {\n    clearInterval(this.timer);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timer);\n  }\n\n  tick() {\n    const textArray = this.props.textArray;\n    const position = this.state.position;\n    this.setState({\n      position: position < textArray.length ? position + 1 : position\n    });\n  }\n\n  render() {\n    const _this$props = this.props,\n          active = _this$props.active,\n          textArray = _this$props.textArray;\n    const position = this.state.position;\n    console.log(textArray[position]);\n    return React.createElement(\"section\", {\n      className: \"hero is-fullheight\",\n      style: {\n        display: active ? \"block\" : \"none\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }), React.createElement(\"nav\", {\n      style: {\n        position: \"absolute\",\n        top: \"44vh\"\n      },\n      className: \"level \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \" \", textArray[position], \" \"), React.createElement(\"div\", {\n      className: \"level-item has-text-centered\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      onClick: this.startTimer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \" \", React.createElement(FontAwesomeIcon, {\n      icon: \"play\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), \" \"), React.createElement(\"span\", {\n      onClick: this.stopTimer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \" \", React.createElement(FontAwesomeIcon, {\n      icon: \"pause\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), \" \"))), React.createElement(\"div\", {\n      className: \"level-item has-text-centered\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      onClick: this.stopTimer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \" \", React.createElement(FontAwesomeIcon, {\n      icon: \"pause\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), \" \")))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    active: state.toggle.spreed,\n    textArray: state.text ? state.text.split() : []\n  };\n};\n\nexport default connect(mapStateToProps, null)(Spreeder);","map":{"version":3,"sources":["/Users/Overseer/Desktop/spreeder/options/src/components/Spreeder/Spreeder.tsx"],"names":["React","Navbar","connect","FontAwesomeIcon","Spreeder","Component","constructor","props","timer","state","position","startTimer","setInterval","tick","stopTimer","clearInterval","componentWillUnmount","textArray","setState","length","render","active","console","log","display","top","mapStateToProps","toggle","spreed","text","split"],"mappings":"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","sourcesContent":["/*global chrome*/\nimport React from \"react\";\nimport Navbar from \"../Navbar\";\nimport { connect } from \"react-redux\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\ninterface SpreederProps {\n  active: boolean;\n  textArray: string[];\n}\n\ninterface SpreederState {\n  position: number;\n}\n\nclass Spreeder extends React.Component<SpreederProps, SpreederState> {\n  timer: any;\n  constructor(props) {\n    super(props);\n    this.state = {\n      position: 0\n    };\n  }\n\n  startTimer() {\n    this.timer = setInterval(() => this.tick(), 1000);\n  }\n\n  stopTimer() {\n    clearInterval(this.timer);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timer);\n  }\n\n  tick() {\n    const { textArray } = this.props;\n    const { position } = this.state;\n    this.setState({\n      position: position < textArray.length ? position + 1 : position\n    });\n  }\n\n  render() {\n    const { active, textArray } = this.props;\n    const { position } = this.state;\n    console.log(textArray[position]);\n    return (\n      <section\n        className=\"hero is-fullheight\"\n        style={{\n          display: active ? \"block\" : \"none\"\n        }}\n      >\n        <Navbar />\n        <nav\n          style={{\n            position: \"absolute\",\n            top: \"44vh\"\n          }}\n          className=\"level \"\n        >\n          <div className=\"container\"> {textArray[position]} </div>\n          <div className=\"level-item has-text-centered\">\n            <div>\n              <span onClick={this.startTimer}>\n                {\" \"}\n                <FontAwesomeIcon icon=\"play\" />{\" \"}\n              </span>\n              <span onClick={this.stopTimer}>\n                {\" \"}\n                <FontAwesomeIcon icon=\"pause\" />{\" \"}\n              </span>\n            </div>\n          </div>\n          <div className=\"level-item has-text-centered\">\n            <div>\n              <span onClick={this.stopTimer}>\n                {\" \"}\n                <FontAwesomeIcon icon=\"pause\" />{\" \"}\n              </span>\n            </div>\n          </div>\n        </nav>\n      </section>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    active: state.toggle.spreed,\n    textArray: state.text ? state.text.split() : []\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  null\n)(Spreeder);\n"]},"metadata":{},"sourceType":"module"}