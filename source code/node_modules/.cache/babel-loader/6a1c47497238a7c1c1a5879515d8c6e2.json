{"ast":null,"code":"var _jsxFileName = \"/Users/Overseer/Desktop/spreeder/options/src/components/Body/Spreeder/FontSize/FontSize.tsx\";\nimport React from \"react\";\nimport Num from \"../../../Num\";\nimport { connect } from \"react-redux\";\nimport { setSize } from \"../../../../actions\";\n\nclass FontSize extends React.Component {\n  constructor(props) {\n    super(props);\n    this.pause = this.pause.bind(this);\n  }\n\n  pause() {\n    const isSpreeding = this.props.isSpreeding;\n    const playPauseButton = document.querySelector(\"#playPause\");\n\n    if (isSpreeding) {\n      playPauseButton.click();\n    }\n  }\n\n  render() {\n    const _this$props = this.props,\n          size = _this$props.size,\n          setSize = _this$props.setSize;\n    return React.createElement(Num, {\n      icon: \"exchange-alt\",\n      label: \"Font Size: \" + size,\n      handleIncrement: () => {\n        this.pause();\n        setSize(size + 1);\n      },\n      handleDecrement: () => {\n        this.pause();\n        setSize(size - 1);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    });\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    size: state.size,\n    isSpreeding: state.spreeding\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setSize: size => dispatch(setSize(size))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FontSize);","map":{"version":3,"sources":["/Users/Overseer/Desktop/spreeder/options/src/components/Body/Spreeder/FontSize/FontSize.tsx"],"names":["React","Num","connect","setSize","FontSize","Component","constructor","props","pause","bind","isSpreeding","playPauseButton","document","querySelector","click","render","size","mapStateToProps","state","spreeding","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,cAAhB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,QAAwB,qBAAxB;;AAQA,MAAMC,QAAN,SAAuBJ,KAAK,CAACK,SAA7B,CAAsD;AACpDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa,KAAKA,KAAL,CAAWC,IAAX,CAAgB,IAAhB,CAAb;AACD;;AAEDD,EAAAA,KAAK,GAAG;AAAA,UACEE,WADF,GACkB,KAAKH,KADvB,CACEG,WADF;AAEN,UAAMC,eAAe,GAAGC,QAAQ,CAACC,aAAT,CAAuB,YAAvB,CAAxB;;AACA,QAAIH,WAAJ,EAAiB;AACfC,MAAAA,eAAe,CAACG,KAAhB;AACD;AACF;;AACDC,EAAAA,MAAM,GAAG;AAAA,wBACmB,KAAKR,KADxB;AAAA,UACCS,IADD,eACCA,IADD;AAAA,UACOb,OADP,eACOA,OADP;AAEP,WACE,oBAAC,GAAD;AACE,MAAA,IAAI,EAAC,cADP;AAEE,MAAA,KAAK,EAAE,gBAAgBa,IAFzB;AAGE,MAAA,eAAe,EAAE,MAAM;AACrB,aAAKR,KAAL;AACAL,QAAAA,OAAO,CAACa,IAAI,GAAG,CAAR,CAAP;AACD,OANH;AAOE,MAAA,eAAe,EAAE,MAAM;AACrB,aAAKR,KAAL;AACAL,QAAAA,OAAO,CAACa,IAAI,GAAG,CAAR,CAAP;AACD,OAVH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAcD;;AA7BmD;;AAgCtD,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLF,IAAAA,IAAI,EAAEE,KAAK,CAACF,IADP;AAELN,IAAAA,WAAW,EAAEQ,KAAK,CAACC;AAFd,GAAP;AAID,CALD;;AAOA,MAAMC,kBAAkB,GAAGC,QAAQ,IAAI;AACrC,SAAO;AACLlB,IAAAA,OAAO,EAAEa,IAAI,IAAIK,QAAQ,CAAClB,OAAO,CAACa,IAAD,CAAR;AADpB,GAAP;AAGD,CAJD;;AAMA,eAAed,OAAO,CACpBe,eADoB,EAEpBG,kBAFoB,CAAP,CAGbhB,QAHa,CAAf","sourcesContent":["import React from \"react\";\nimport Num from \"../../../Num\";\nimport { connect } from \"react-redux\";\nimport { setSize } from \"../../../../actions\";\n\ninterface FontSizeProps {\n  size: number;\n  setSize(size: number): any;\n  isSpreeding: boolean;\n}\n\nclass FontSize extends React.Component<FontSizeProps> {\n  constructor(props) {\n    super(props);\n    this.pause = this.pause.bind(this);\n  }\n\n  pause() {\n    const { isSpreeding } = this.props;\n    const playPauseButton = document.querySelector(\"#playPause\") as HTMLElement;\n    if (isSpreeding) {\n      playPauseButton.click();\n    }\n  }\n  render() {\n    const { size, setSize } = this.props;\n    return (\n      <Num\n        icon=\"exchange-alt\"\n        label={\"Font Size: \" + size}\n        handleIncrement={() => {\n          this.pause();\n          setSize(size + 1);\n        }}\n        handleDecrement={() => {\n          this.pause();\n          setSize(size - 1);\n        }}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    size: state.size,\n    isSpreeding: state.spreeding\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setSize: size => dispatch(setSize(size))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(FontSize);\n"]},"metadata":{},"sourceType":"module"}